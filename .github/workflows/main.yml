name: Build and deploy Python project to GitHub release - nephroapi

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here
      
      - name: Create Python app zip
        run: |
          zip -r nephroapi.zip . -x '*.git*' 'venv/*'
      
      - name: Get latest release version
        id: get_latest_release_version
        uses: actions/github-script@v4
        with:
          script: |
            const { data } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return { version: data[0].tag_name.replace('v', ''), notes: data[0].body }
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v$((steps.get_latest_release_version.outputs.version + 1))
          release_name: Release v$((steps.get_latest_release_version.outputs.version + 1))
          body: |
            Release notes go here
            
            ## Release v${{ steps.get_latest_release_version.outputs.version }}
            
            ${steps.get_latest_release_version.outputs.notes}
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /nephroapi.zip
          asset_name: nephroapi.zip
          asset_content_type: application/zip
